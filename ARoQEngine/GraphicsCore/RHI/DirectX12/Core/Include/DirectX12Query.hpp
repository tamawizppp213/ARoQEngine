//////////////////////////////////////////////////////////////////////////////////
///             @file   DirectX12Query.hpp
///             @brief  https://dench.flatlib.jp/d3d/d3d12/query
///             @author toide
///             @date   2024/01/04 2:38:38
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef DIRECTX12_QUERY_HPP
#define DIRECTX12_QUERY_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GraphicsCore/RHI/InterfaceCore/Core/Include/RHIQuery.hpp"
#include "GraphicsCore/RHI/DirectX12/Core/Include/DirectX12Core.hpp"
#include "DirectX12QueryAllocator.hpp"
#include <d3d12.h>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                               Class
//////////////////////////////////////////////////////////////////////////////////
namespace rhi::directX12
{
	/****************************************************************************
	*				  			   DirectX12Query
	*************************************************************************//**
	*  @class     DirectX12Query
	*  @brief     temp
	*****************************************************************************/
	class RHIQuery : public core::RHIQuery
	{
	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/
		/*----------------------------------------------------------------------
		*  @brief :  Query用の確保されていない領域のIndexを返します.
		/*----------------------------------------------------------------------*/
		core::QueryResultLocation Allocate() override;

		/*----------------------------------------------------------------------
		*  @brief :  Query用の指定されたIndexを解放します.
		/*----------------------------------------------------------------------*/
		void Free(core::QueryResultLocation& location) override;

		/****************************************************************************
		**                Public Member Variables
		*****************************************************************************/
		/*----------------------------------------------------------------------
		*  @brief :  Queryの種類を返します
		/*----------------------------------------------------------------------*/
		D3D12_QUERY_TYPE GetDxQueryType() const { return _dxQueryType; }

		/*----------------------------------------------------------------------
		*  @brief :  Query heapの種類を返します
		/*----------------------------------------------------------------------*/
		D3D12_QUERY_HEAP_TYPE GetDxQueryHeapType() const { return _dxQueryHeapType; }

		/*----------------------------------------------------------------------
		*  @brief :  Query heapを返します
		/*----------------------------------------------------------------------*/
		QueryHeapPtr GetHeap() const { return _queryHeap; }

		/*----------------------------------------------------------------------
		*  @brief :  QueryTypeにのっとったバイトサイズを返します
		/*----------------------------------------------------------------------*/
		gu::uint32 GetResultStrideByteSize() const;
		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
		RHIQuery() = default;

		~RHIQuery();

		explicit RHIQuery(const gu::SharedPointer<core::RHIDevice>& device, 
			const core::QueryHeapType heapType);
	protected:
		/****************************************************************************
		**                Protected Function
		*****************************************************************************/
		
		/****************************************************************************
		**                Protected Member Variables
		*****************************************************************************/
		// @brief : GPU計測に使用するQuery Heap
		QueryHeapPtr _queryHeap = nullptr;

		// @brief : Queryを行う種類
		D3D12_QUERY_TYPE _dxQueryType = D3D12_QUERY_TYPE_OCCLUSION;

		// @brief : Query heap自体の種類
		D3D12_QUERY_HEAP_TYPE _dxQueryHeapType = D3D12_QUERY_HEAP_TYPE_OCCLUSION;

		// @brief : queryのIDを登録する用
		QueryAllocator _queryAllocator;
	private:
		/****************************************************************************
		**                Private Function
		*****************************************************************************/
		const gu::wchar* PrepareQueryHeapName();

		const gu::wchar* PrepareResultBufferName();
	};
}

#endif