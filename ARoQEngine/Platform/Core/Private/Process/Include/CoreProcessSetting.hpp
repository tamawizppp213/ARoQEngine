//////////////////////////////////////////////////////////////////////////////////
///  @file   CoreProcessSetting.hpp
///  @brief  temp
///  @author toide
///  @date   2024/06/16 14:36:29
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef CORE_PROCESS_SETTING_HPP
#define CORE_PROCESS_SETTING_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameUtility/Base/Include/GUType.hpp"

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                               Class
//////////////////////////////////////////////////////////////////////////////////

namespace platform::core
{
	/****************************************************************************
	*				  			ProcessPriority
	****************************************************************************/
	/*! @brief Processを作成する際の優先度@n
	*          https://learn.microsoft.com/ja-jp/windows/win32/api/processthreadsapi/nf-processthreadsapi-setpriorityclass
	*****************************************************************************/
	enum class ProcessPriority : gu::uint8
	{
		Idle        = 0,  //!< システムがアイドル状態の場合にのみスレッドが実行されるプロセス. (スクリーンセーバーなどで使用), 優先度は最低
		Low         = 1,  //!< Idle < Low < Normalの優先度
		Normal      = 2,  //!< 特別なスケジュール設定を必要としないプロセス
		AboveNormal = 3,  //!< Normal < AboveNormal < Highの優先度
		High        = 4,  //!< すぐに実行する必要があるプロセス. Normalよりも優先度高い
		RealTime    = 5   //!< 可能な限り高い優先度を持つプロセス. 非常に短い間隔を超えて実行されるプロセスではマウスが応答しなくなったりディスクキャッシュがフラッシュされない可能性あり
	};

	/****************************************************************************
	*				  	ProcessWindowActivate
	****************************************************************************/
	/*! @brief Processを実行するときのウィンドウ表示を行います
	*****************************************************************************/
	enum class ProcessWindowActivate : gu::uint8
	{
		ReallyHidden = 0,  //!< ウィンドウを完全非表示 (デフォルト)
		Hidden       = 1,  //!< ウィンドウを非表示 (タスクバーには表示され, 最小化されます)
		Show         = 2,  //!< ウィンドウを表示
	};
}
#endif