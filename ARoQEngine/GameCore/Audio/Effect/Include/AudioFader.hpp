//////////////////////////////////////////////////////////////////////////////////
///             @file   AudioFader.hpp
///             @brief  Fade in Fade out
///             @author Toide Yutaro
///             @date   2022_12_22
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef AUDIO_FADER_HPP
#define AUDIO_FADER_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameUtility/Base/Include/GUClassUtility.hpp"

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                         AudioClip
//////////////////////////////////////////////////////////////////////////////////
namespace gc::audio
{
	enum FadeState
	{
		None,
		Started,
		Fading,
		Completed,
	};
	/****************************************************************************
	*				  		AudioFader
	*************************************************************************//**
	*  @class     AudioFader
	*  @brief     Fade
	*****************************************************************************/
	class AudioFader : public gu::Copyable
	{
		
	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/
		void Update(const float deltaTime);

		/****************************************************************************
		**                Public Property
		*****************************************************************************/
		float GetVolume() const { return _currentVolume; }
		
		FadeState GetState() const { return _state; }

		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
		AudioFader() = default;

		AudioFader(const float startVolume, const float targetVolume, const float targetTime);

		~AudioFader() = default;

	protected:
		/****************************************************************************
		**                Protected Function
		*****************************************************************************/

		/****************************************************************************
		**                Protected Property
		*****************************************************************************/
		float _startVolume   = 0.0f;
		float _targetVolume  = 0.0f;
		float _targetTime    = 0.0f;
		float _currentTime   = 0.0f;
		float _currentVolume = 0.0f;
		FadeState _state = FadeState::None;
		
	};
}
#endif