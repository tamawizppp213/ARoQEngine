//////////////////////////////////////////////////////////////////////////////////
//              @file   GPUShaderState.cpp
///             @brief  Shader State 
///             @author Toide Yutaro
///             @date   2022_07_02
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GraphicsCore/RHI/InterfaceCore/PipelineState/Include/GPUShaderState.hpp"
#include <stdexcept>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////
using namespace rhi::core;


//////////////////////////////////////////////////////////////////////////////////
//                          Implement
//////////////////////////////////////////////////////////////////////////////////
std::string GPUShaderState::GetShaderTypeName(core::ShaderType shaderType)
{
	switch (shaderType)
	{
		case ShaderType::Vertex       : return "vs";
		case ShaderType::Pixel        : return "ps";
		case ShaderType::Compute      : return "cs";
		case ShaderType::Mesh         : return "ms";
		case ShaderType::Amplification: return "as";
		case ShaderType::Domain       : return "ds";
		case ShaderType::Geometry     : return "gs";
		case ShaderType::Hull         : return "hs";
		default:
			throw std::runtime_error("not supported shader type");
	}
}