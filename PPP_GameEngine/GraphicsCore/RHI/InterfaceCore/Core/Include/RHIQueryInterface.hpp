//////////////////////////////////////////////////////////////////////////////////
///             @file   RHIQueryInterface.hpp
///             @brief  Query RHI Interface. Return myself interface.
///             @author Toide Yutaro
///             @date   2022_06_09
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef RHI_QUERY_INTERFACE_HPP
#define RHI_QUERY_INTERFACE_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                              Class
//////////////////////////////////////////////////////////////////////////////////
/****************************************************************************
*				  			RHIFence
*************************************************************************//**
*  @class     RHIFence
*  @brief     CPU-GPU synchronization
*****************************************************************************/
class RHIQueryInterface 
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/
	// return myself interface
	template<typename T>
	T& As()
	{
		return static_cast<T&>(*this);
	}

	template<typename T>
	const T& As() const
	{
		return static_cast<T&>(*this);
	}
	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/

	/****************************************************************************
	**                Constructor and Destructor
	*****************************************************************************/
protected:
	/****************************************************************************
	**                Protected Function
	*****************************************************************************/
	
	/****************************************************************************
	**                Protected Member Variables
	*****************************************************************************/
	
};
#endif