//////////////////////////////////////////////////////////////////////////////////
///             @file   ValueRange.hpp
///             @brief  From Start to End
///             @author Toide Yutaro
///             @date   2022_09_30
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef VALUE_RANGE_HPP
#define VALUE_RANGE_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                         Template Class
//////////////////////////////////////////////////////////////////////////////////

/****************************************************************************
*				  			ValueRange
*************************************************************************//**
*  @class     ValueRange
*  @brief     From Start to End
*****************************************************************************/
template<typename T>
struct ValueRange
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/
	T GetValueSize() { return End - Start; }
	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/
	T Start = T();
	T End   = T();

	/****************************************************************************
	**                Constructor and Destructor
	*****************************************************************************/
	ValueRange() = default;
	ValueRange(const T& start, const T& end) : Start(start), End(end) {};

};

#endif