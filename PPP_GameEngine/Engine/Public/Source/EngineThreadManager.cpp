//////////////////////////////////////////////////////////////////////////////////
//              @file   PPPEngine.cpp
///             @brief  各分野のエンジンをまとめ, スレッドを管理するクラス
///             @author Toide Yutaro
///             @date   2023_09_24
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "../Include/EngineThreadManager.hpp"

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////
using namespace engine::core;
using namespace gu;
//////////////////////////////////////////////////////////////////////////////////
//                              Implement
//////////////////////////////////////////////////////////////////////////////////
#pragma region Constructor and Destructor
EngineThreadManager::EngineThreadManager()
{
	_threadPools.resize(static_cast<int>(ThreadPoolType::CountOf));

	_threadPools[(int)ThreadPoolType::RenderMain] = gu::MakeShared<ThreadPool>(1);
	_threadPools[(int)ThreadPoolType::UpdateMain] = gu::MakeShared<ThreadPool>(1);
}

EngineThreadManager::~EngineThreadManager()
{
	_threadPools.clear();
	_threadPools.shrink_to_fit();
}
#pragma endregion Constructor and Destructor

#pragma region Main Function

#pragma endregion Main Function