//////////////////////////////////////////////////////////////////////////////////
///             @file   TransportTCP.hpp
///             @brief  Winsock2 TCP Module
///             @author Toide Yutaro
///             @date   2022_12_04
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef ITRANSPORT_HPP
#define ITRANSPORT_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameUtility/Base/Include/ClassUtility.hpp"
#include <WinSock2.h>
#include <string>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                               Class
//////////////////////////////////////////////////////////////////////////////////
namespace gc
{

	/****************************************************************************
	*				  			 TransportTCP
	*************************************************************************//**
	*  @class     TransportTCP
	*  @brief     TCP Connection Class (Winsock (windows only))
	*****************************************************************************/
	class ITransport: public NonCopyable
	{
	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/
		/* @brief : Transport Connection (return true: Connection Success, false: Connection Fail)*/
		virtual bool Connect(const std::string& address, const std::uint32_t port) = 0;
		/* @brief : Transport Disconnection*/
		virtual void Disconnect() = 0;
		/****************************************************************************
		**                Public Member Variables
		*****************************************************************************/
		bool IsConnected() const { return _isConnected; }
		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
	protected:
		/****************************************************************************
		**                Protected Function
		*****************************************************************************/
		ITransport();
		virtual ~ITransport();
		/****************************************************************************
		**                Protected Member Variables
		*****************************************************************************/
		/* @brief: Connection Flags*/
		bool _isConnected = false;
	};
}
#endif