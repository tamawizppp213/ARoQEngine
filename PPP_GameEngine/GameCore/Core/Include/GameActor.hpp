//////////////////////////////////////////////////////////////////////////////////
///             @file   TemplateText.hpp
///             @brief  TemplateText
///             @author Toide Yutaro
///             @date   2022_03_11
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef GAME_ACTOR_HPP
#define GAME_ACTOR_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameObject.hpp"
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////
namespace rhi::core
{
	class GPUResourceView;
}

//////////////////////////////////////////////////////////////////////////////////
//                         Template Class
//////////////////////////////////////////////////////////////////////////////////

namespace gc::core
{

	/****************************************************************************
	*				  			GameActor
	*************************************************************************//**
	*  @class     GameActor
	*  @brief     Updatable object
	*****************************************************************************/
	class GameActor : public GameObject
	{
	protected:
		using GPUResourceViewPtr = std::shared_ptr<rhi::core::GPUResourceView>;

	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/
		virtual void Update(const float deltaTime, const bool enableUpdateChild = false);

		/****************************************************************************
		**                Public Member Variables
		*****************************************************************************/

		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
		GameActor(const LowLevelGraphicsEnginePtr& engine);

		~GameActor();

	protected:
		/****************************************************************************
		**                Protected Function
		*****************************************************************************/
		void UpdateChild(const float deltaTime);

		void UpdateComponents(const float deltaTime);

		/****************************************************************************
		**                Protected Member Variables
		*****************************************************************************/
	};
}
#endif