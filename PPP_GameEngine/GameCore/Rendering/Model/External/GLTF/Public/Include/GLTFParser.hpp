//////////////////////////////////////////////////////////////////////////////////
///             @file   Json.hpp
///             @brief  Json reader and writer:
///                     How To : Load -> std::map like Object->call["name"] or Array->call[index]-> Save etc
///             @author Toide Yutaro (dependency : rapidjson)
///             @date   2022_05_12  
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef GLTF_PARSER_HPP
#define GLTF_PARSER_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameUtility/File/Include/Json.hpp"
#include <string>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                         Template Class
//////////////////////////////////////////////////////////////////////////////////
namespace gltf
{

	/****************************************************************************
	*				  			JsonDocument
	*************************************************************************//**
	*  @class     JsonDocument
	*  @brief     Document
	*****************************************************************************/
	class GLTFFile
	{
	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/
		void LoadFromText(const std::string& filePath);
		void LoadFromBinary(const std::string& filePath);
		/****************************************************************************
		**                Public Member Variables
		*****************************************************************************/

		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
		
	protected:
		/****************************************************************************
		**                Protected Function
		*****************************************************************************/

		/****************************************************************************
		**                Protected Member Variables
		*****************************************************************************/
		
	};


}
#endif