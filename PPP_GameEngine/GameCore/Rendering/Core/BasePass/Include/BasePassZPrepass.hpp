//////////////////////////////////////////////////////////////////////////////////
///             @file   BasePassZPrepass.hpp
///             @brief  ZPrepass
///             @author Toide Yutaro
///             @date   2022_05_04
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef BASE_PASS_ZPREPASS_HPP
#define BASE_PASS_ZPREPASS_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameUtility/Base/Include/ClassUtility.hpp"
#include <memory>
#include <cstdint>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////
namespace rhi::core
{
	class RHIResourceLayout;
	class GPUGraphicsPipelineState;
}

//////////////////////////////////////////////////////////////////////////////////
//                         Template Class
//////////////////////////////////////////////////////////////////////////////////
namespace gc::basepass
{

	/****************************************************************************
	*				  			TemplateClass
	*************************************************************************//**
	*  @class     TemplateClass
	*  @brief     temp
	*****************************************************************************/
	class ZPrepass : public NonCopyable
	{
		using PipelineStatePtr  = std::shared_ptr<rhi::core::GPUGraphicsPipelineState>;
		using ResourceLayoutPtr = std::shared_ptr<rhi::core::RHIResourceLayout>;
	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/

		/****************************************************************************
		**                Public Member Variables
		*****************************************************************************/

		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
		ZPrepass() = default;

		ZPrepass(const std::uint32_t width, const std::uint32_t height);

		~ZPrepass();
	protected:
		/****************************************************************************
		**                Private Function
		*****************************************************************************/

		/****************************************************************************
		**                Private Member Variables
		*****************************************************************************/
		PipelineStatePtr  _pipeline = nullptr;

		ResourceLayoutPtr _resourceLayout = nullptr;
	};
}
#endif