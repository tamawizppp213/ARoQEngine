//////////////////////////////////////////////////////////////////////////////////
///             @file   Text.hpp
///             @brief  Text object (string, number)
///                     現在では, 一行分の大きな自作テクスチャ画像を読み込んで, UV値に合わせて表示しています. 
///                     今後の予定では,　ttfファイルを読み込んでBitmapに変換, その後テクスチャを読み込んで
/// 　　　　　　　　　　　　　各文字を表示できるようにしたいと考えています. (現状では工数がかなりかかるためやってません)
///                     行う場合は破壊的変更が生じることが考えられます. 
///             @author Toide Yutaro
///             @date   2022_12_14
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef TEXT_HPP
#define TEXT_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "Image.hpp"
#include <vector>
#include <string>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                               Class
//////////////////////////////////////////////////////////////////////////////////

namespace gc::ui
{
	struct StringInfo
	{
		std::string String;
		gm::Float2  SizePerChar;
		gm::Float3  StartPosition; // rect lect upper point
		float       Space = 0.0f;
		gm::Float4  Color = gm::Float4(1,1,1,1);
	};

	struct NumberInfo
	{
		std::uint32_t Number;
		std::uint32_t Digit;
		gm::Float2    SizePerDigit;
		gm::Float3    StartPosition;
		float         Space = 0.0f;
		gm::Float4    Color = gm::Float4(1,1,1,1);
	};

	/****************************************************************************
	*				  			    Text
	*************************************************************************//**
	*  @class     Text
	*  @brief     現在では, 一行分の大きな自作テクスチャ画像を読み込んで, UV値に合わせて表示しています. 
	              今後の予定では,　ttfファイルを読み込んでBitmapに変換, その後テクスチャを読み込んで
    　　　　　　　　　各文字を表示できるようにしたいと考えています. (現状では工数がかなりかかるためやってません)
			      行う場合は破壊的変更が生じることが考えられます. 
	*****************************************************************************/
	class Text 
	{
	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/

		/****************************************************************************
		**                Public Member Variables
		*****************************************************************************/
		/* @brief : Get text image list*/
		const std::vector<Image>& GetTextImages() const { return _images; }

		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
		/* @brief : Text string constructor */
		Text(const CoordinateType type, const StringInfo& stringInfo);
		
		/* @brief : Text number constructor*/
		Text(const CoordinateType type, const NumberInfo& numberInfo);

	protected:
		/****************************************************************************
		**                Protected Function
		*****************************************************************************/
		
		/****************************************************************************
		**                Protected Member Variables
		*****************************************************************************/
		std::vector<Image> _images = {};

		static constexpr std::int32_t ASCII_START_CHAR = 32;

	private:
		/****************************************************************************
		**                Private Function
		*****************************************************************************/
	};
}
#endif