//////////////////////////////////////////////////////////////////////////////////
///             @file   CoreCursor.hpp
///             @brief  カーソルのアプリケーションに対する表示, 非表示を行います
///             @author Toide Yutaro
///             @date   2023_09_02
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef CORE_CURSOR_HPP
#define CORE_CURSOR_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "CoreCommonState.hpp"
#include "GameUtility/Math/Include/GMVector.hpp"
#include "GameUtility/Base/Include/ClassUtility.hpp"
#include <cstdint>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                               Class
//////////////////////////////////////////////////////////////////////////////////

namespace platform::core
{
	/****************************************************************************
	*				  			    ICursor
	*************************************************************************//**
	*  @class     ICursor
	*  @brief     カーソルの表示クラス
	*****************************************************************************/
	class ICursor : public NonCopyable
	{
	public:
		/****************************************************************************
		**                Public Function
		*****************************************************************************/
		virtual void Show() = 0;

		virtual void Hide() = 0;

		/****************************************************************************
		**                Public Member Variables
		*****************************************************************************/
		virtual gm::Float2  GetPosition() const = 0;
		
		virtual CursorType  GetType() const = 0;

		virtual void SetPosition(const std::int32_t x, const std::int32_t y) const = 0;

		virtual void SetType(const CursorType type) = 0;
		
		/****************************************************************************
		**                Constructor and Destructor
		*****************************************************************************/
		explicit ICursor(const CursorType type) : _type(type) {};

	protected:
		/****************************************************************************
		**                Protected Function
		*****************************************************************************/

		/****************************************************************************
		**                Protected Member Variables
		*****************************************************************************/
		CursorType _type = CursorType::Default;
	};
}
#endif
